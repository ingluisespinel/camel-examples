<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0">

    <bean id="handlerException" class="com.capacitacion.camel.rest.processors.ExceptionHandlerProcessor"/>
    <bean id="fakeUsersRepository" class="com.capacitacion.camel.rest.beans.FakeUsersRepository"/>
    <bean id="fakeOrdersRepository" class="com.capacitacion.camel.rest.beans.FakeOrdersRepository"/>
    <bean id="validator" class="org.apache.camel.component.bean.validator.HibernateValidationProviderResolver"/>
    <bean id="ordersAggregator" class="com.capacitacion.camel.rest.aggregators.OrdersAggregator"/>

	<camelContext xmlns="http://camel.apache.org/schema/blueprint">
	
		<restConfiguration component="jetty" port="8080" host="0.0.0.0" bindingMode="json" />

		<rest path="/api/v1/users">
			<get produces="application/json">
				<to uri="direct:getUsers"/>
			</get>
			<get uri="/{userId}" consumes="application/json">
				<to uri="direct:getUserById"/>
			</get>
			<post consumes="application/json" produces="application/json" type="com.capacitacion.camel.rest.pojos.User" >                
				<to uri="direct:createUser"/>
			</post>
		</rest>

        <rest path="/api/v1/orders/process">
			<post consumes="application/json" produces="application/json" >                
				<to uri="direct:processOrders"/>
			</post>
		</rest>

		<route id="route-get-users">
			<from uri="direct:getUsers"/>
			<to uri="bean:fakeUsersRepository?method=find"/>
		</route>

		<route id="route-get-user-by-id">
            <from uri="direct:getUserById"/>
            <log message="Processing request GetUserById"/>
            <bean ref="fakeUsersRepository" method="findById"/>
            <choice>
                <when>
                    <simple>${body} != null</simple>
                    <log message="User found -> ${body}"/>
                    <setHeader headerName="CamelHttpResponseCode">
                        <constant>200</constant>
                    </setHeader>
                </when>
                <otherwise>
                    <setHeader headerName="CamelHttpResponseCode">
                        <constant>404</constant>
                    </setHeader>
                </otherwise>
            </choice>
        </route>

        <route id="route-create-user">
            <from uri="direct:createUser" />
            <log message="Processing request CreateUser"/>
            <doTry>
                <to uri="bean-validator:validateUser"/>
                <bean ref="fakeUsersRepository" method="save"/>
                <doCatch>
                    <exception>org.apache.camel.component.bean.validator.BeanValidationException</exception>
                    <exception>java.lang.IllegalArgumentException</exception>
                    <log message="Input data error"/>
                    <process ref="handlerException" />
                    <marshal>
                        <json library="Jackson"/>
                    </marshal>
                </doCatch>
                <doFinally>
                    <log message="Finally: Save user request finished"/>
                 </doFinally>
            </doTry>            
        </route>

        <route id="route-process-orders">
            <from uri="direct:processOrders"/>
            <log message="Processing Orders"/>
            <setHeader headerName="currentPage">
                <constant>0</constant>
            </setHeader>
            <loop doWhile="true">
                <simple>${header.currentPage} >= 0</simple>
                <enrich strategyRef="ordersAggregator">
                    <simple>direct:getExternalOrders</simple>
                </enrich>
            </loop>
            <bean ref="fakeOrdersRepository" method="saveAll"/>
        </route>

        <!-- Ruta que consume un servicio externo -->
        <route id="route-get-external-orders">
            <from uri="direct:getExternalOrders"/>
            <setHeader headerName="CamelHttpMethod">
                <constant>GET</constant>
            </setHeader>
            <setHeader headerName="Content-Type">
                <constant>application/json</constant>
            </setHeader>
            <setHeader headerName="CamelHttpQuery">
                <simple>page=${header.currentPage}</simple>
            </setHeader>
            <log message="Getting orders in page ${header.currentPage}"/>
            <to uri="http://127.0.0.1:3000/api/v1/orders?throwExceptionOnFailure=false&amp;bridgeEndpoint=true"/>
            <unmarshal>
                <json library="Jackson" useList="true" unmarshalTypeName="com.capacitacion.camel.rest.pojos.Order"/>
            </unmarshal>
        </route>

	</camelContext>
</blueprint>